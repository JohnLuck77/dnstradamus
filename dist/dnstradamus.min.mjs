/* dnstradamus.js v1.0.1 */
var e=e=>[].slice.call(e);function getOriginFromHref(e){const t=e.split("/");return`${t[0]}//${t[2]}/`}function buildLinkTag(e){let t=document.createElement("link");t.rel="dns-prefetch",t.href=e,t.crossOrigin="anonymous",document.head.appendChild(t)}export default function(t){const n={context:"body",include:(e,t)=>!0,timeout:4e3,observeChanges:!1,observeRoot:"body",bailIfSlow:!1,...t},o=`${n.context} a[href^="http://"],a[href^="https://"]`,i="connection"in navigator&&navigator.connection.saveData,r="connection"in navigator?navigator.connection.effectiveType:"4g",c=!0===n.bailIfSlow&&(!0===i||!0===/^(3|4)g$/i.test(r));if("IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&!1===c){let t=[],i=new IntersectionObserver((e,o)=>{e.forEach(e=>{if(!0===e.isIntersecting){let i=e.target,c=getOriginFromHref(i.href);-1===t.indexOf(c)&&-1===c.indexOf(`${document.location.protocol}//${document.location.host}`)&&!0===n.include(i,c)&&(n.timeout>0&&"requestIdleCallback"in window?requestIdleCallback(()=>buildLinkTag(c),{timeout:n.timeout}):buildLinkTag(c),t.push(c)),o.unobserve(i),r=r.filter(e=>e!==i)}})}),r=e(document.querySelectorAll(o));r.forEach(e=>i.observe(e)),"MutationObserver"in window&&!0===n.observeChanges&&new MutationObserver(n=>n.forEach(()=>{e(document.querySelectorAll(o)).forEach(e=>{-1===r.indexOf(e)&&-1===t.indexOf(getOriginFromHref(e.href))&&(r.push(e),i.observe(e))})})).observe(document.querySelector(n.observeRoot),{childList:!0,subtree:!0})}}
