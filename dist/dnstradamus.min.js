/*dnstradamus 1.0.2*/
var dnstradamus=function(){"use strict";function _extends(){return(_extends=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var e=function(e){var n=e.split("/");return n[0]+"//"+n[2]+"/"},n=function(e){var n=document.createElement("link");n.rel="dns-prefetch",n.href=e,document.head.appendChild(n)};return function(t){var r=_extends({context:"body",include:function(e,n){return!0},timeout:4e3,observeChanges:!1,observeRoot:"body",bailIfSlow:!1},t),o=r.context+' a[href^="http://"],a[href^="https://"]';if("IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&!1===("connection"in navigator?navigator.connection.saveData:!1===/^(3|4)g$/i.test("connection"in navigator?navigator.connection.effectiveType:"4g"))){var i=[],c=new IntersectionObserver(function(t,o){t.forEach(function(t){if(!0===t.isIntersecting){var c=t.target,a=e(c.href);-1===i.indexOf(a)&&-1===a.indexOf(document.location.protocol+"//"+document.location.host)&&!0===r.include(c,a)&&(r.timeout>0&&"requestIdleCallback"in window?requestIdleCallback(function(){return n(a)},{timeout:r.timeout}):n(a),i.push(a)),o.unobserve(c),u=u.filter(function(e){return e!==c})}})}),u=[].slice.call(document.querySelectorAll(o));u.forEach(function(e){return c.observe(e)}),"MutationObserver"in window&&!0===r.observeChanges&&new MutationObserver(function(n){return n.forEach(function(){[].slice.call(document.querySelectorAll(o)).forEach(function(n){-1===u.indexOf(n)&&-1===i.indexOf(e(n.href))&&(u.push(n),c.observe(n))})})}).observe(document.querySelector(r.observeRoot),{childList:!0,subtree:!0})}}}();
