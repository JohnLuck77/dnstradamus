/* dnstradamus.js v1.0.0 */
var e=e=>[].slice.call(e);function getOriginFromHref(e){const t=e.split("/");return`${t[0]}//${t[2]}/`}function buildLinkTag(e){let t=document.createElement("link");t.setAttribute("rel","dns-prefetch"),t.setAttribute("href",e),t.setAttribute("crossorigin","anonymous"),document.head.appendChild(t)}export default function(t){const n={context:"body",include:(e,t)=>!0,threshold:200,timeout:4e3,effectiveTypes:["3g","4g"],observeChanges:!1,observeRoot:"body",bailIfSlow:!0,...t},o=`${n.context} a[href^="http://"],a[href^="https://"]`,r="connection"in navigator&&navigator.connection.saveData,i="connection"in navigator?navigator.connection.effectiveType:"4g";let c=[],s=!0===n.bailIfSlow&&(!0===r||-1===n.effectiveTypes.indexOf(i));if("IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype&&!1===s){let t=new IntersectionObserver((e,t)=>{e.forEach(e=>{if(!0===e.isIntersecting||e.intersectionRatio>0){let o=e.target,r=getOriginFromHref(o.href);-1===c.indexOf(r)&&-1===r.indexOf(`${document.location.protocol}//${document.location.host}`)&&!0===n.include(o,r)&&(n.timeout>0&&"requestIdleCallback"in window?requestIdleCallback(()=>buildLinkTag(r),{timeout:n.timeout}):buildLinkTag(r),c.push(r)),t.unobserve(o),anchors=anchors.filter(e=>e!==o)}})},{rootMargin:`${n.threshold}px 0%`});e(document.querySelectorAll(o)).forEach(e=>t.observe(e)),"MutationObserver"in window&&!0===n.observeChanges&&new MutationObserver(n=>n.forEach(()=>{e(document.querySelectorAll(o)).forEach(e=>{-1===anchors.indexOf(e)&&-1===c.indexOf(getOriginFromHref(e.href))&&(anchors.push(e),t.observe(e))})})).observe(document.querySelector(n.observeRoot),{childList:!0,subtree:!0})}}
